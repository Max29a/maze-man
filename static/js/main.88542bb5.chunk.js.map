{"version":3,"sources":["KeyValues.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["UP_ARROW","UP_KEY","App","useState","setKeyDown","dirShown","setDirShown","className","onKeyDown","event","keyWasFound","key","Key","tabIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAAaA,G,MAAW,WAIXC,EAAS,I,OC8CPC,MA7Cf,WAAgB,IAAD,EAEiBC,mBAAiB,IAFlC,mBAEGC,GAFH,aAGmBD,mBAAiB,IAHpC,mBAGNE,EAHM,KAGIC,EAHJ,KAoCb,OACE,qBAAKC,UAAU,MAAMC,UAhCA,SAACC,GACtB,IAAIC,GAAc,EAClB,OAAQD,EAAME,KACZ,KAAKC,EACL,KAAKA,EACHF,GAAc,EACdJ,EAAY,gBACZ,MACF,IDjBoB,YCkBpB,IDdkB,ICehBA,EAAY,gBACZI,GAAc,EACd,MACF,IDrBoB,YCsBpB,IDlBkB,ICmBhBJ,EAAY,gBACZI,GAAc,EACd,MACF,IDzBqB,aC0BrB,IDtBmB,ICuBjBJ,EAAY,gBACZI,GAAc,EAKdA,GACFN,EAAWK,EAAME,MAK6BE,SAAU,EAA1D,SACE,yBAAQN,UAAU,aAAlB,yCAC+BF,QChCtBS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.88542bb5.chunk.js","sourcesContent":["export const UP_ARROW = 'ArrowUp';\nexport const DOWN_ARROW = 'ArrowDown';\nexport const LEFT_ARROW = 'ArrowLeft';\nexport const RIGHT_ARROW = 'ArrowRight';\nexport const UP_KEY = 'w';\nexport const DOWN_KEY = 's';\nexport const LEFT_KEY = 'a';\nexport const RIGHT_KEY = 'd';\n\nexport const isUpKey = (key: string): boolean => {\n    return (key === UP_ARROW || key === UP_KEY);\n};\nexport const isDownKey = (key: string): boolean => {\n    return (key === UP_ARROW || key === UP_KEY);\n};\nexport const isLeftKey = (key: string): boolean => {\n    return (key === UP_ARROW || key === UP_KEY);\n};\nexport const isRightKey = (key: string): boolean => {\n    return (key === UP_ARROW || key === UP_KEY);\n};","import './App.css';\n\nimport {useState} from 'react';\nimport * as Key from './KeyValues';\n\nfunction App() {\n  \n  const [keyDown, setKeyDown] = useState<string>('');\n  const [dirShown, setDirShown] = useState<string>('');\n\n  const handleKeyPress = (event:any) => {\n    let keyWasFound = false;\n    switch (event.key) {\n      case Key.UP_ARROW:\n      case Key.UP_KEY:\n        keyWasFound = true;\n        setDirShown('⬆️');\n        break;\n      case Key.DOWN_ARROW:\n      case Key.DOWN_KEY:\n        setDirShown('⬇️');\n        keyWasFound = true;\n        break;\n      case Key.LEFT_ARROW:\n      case Key.LEFT_KEY:\n        setDirShown('⬅️');\n        keyWasFound = true;\n        break;\n      case Key.RIGHT_ARROW:\n      case Key.RIGHT_KEY:\n        setDirShown('➡️');\n        keyWasFound = true;\n        break;\n      default:\n        break;\n    }\n    if (keyWasFound) {\n      setKeyDown(event.key);\n    }\n  };\n\n  return (\n    <div className=\"App\" onKeyDown={handleKeyPress} tabIndex={0}>\n      <header className=\"App-header\">\n        Navigate with the keyboard: {dirShown}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}