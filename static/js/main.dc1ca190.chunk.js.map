{"version":3,"sources":["Constants.tsx","Maze.react.tsx","ControlPanel.react.tsx","App.tsx","Helpers.tsx","reportWebVitals.js","index.js"],"names":["WALL","Maze","props","mazeArray","map","row","index","square","innerIndex","ControlPanel","useState","newMazeSize","setNewMazeSize","currentLocation","x","y","type","value","onChange","e","target","onClick","val","parseInt","isNaN","onNewMaze","App","maze","setMaze","startPos","personLocation","setPersonLocation","lastLoc","setLasLoc","isWithinMazeBounds","useCallback","location","length","handleKeyPress","event","validKeyPress","newLoc","key","useEffect","size","mazeData","center","Math","round","push","Array","fill","i","Helper","className","onKeyDown","tabIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc1ca190.chunk.js","sourcesContent":["export const UP_ARROW = 'ArrowUp';\nexport const DOWN_ARROW = 'ArrowDown';\nexport const LEFT_ARROW = 'ArrowLeft';\nexport const RIGHT_ARROW = 'ArrowRight';\nexport const UP_KEY = 'w';\nexport const DOWN_KEY = 's';\nexport const LEFT_KEY = 'a';\nexport const RIGHT_KEY = 'd';\n\nexport const PERSON = 'p';\nexport const WALL = '1';\nexport const BLANK = '0';\n\n\n\n// export const isUpKey = (key: string): boolean => {\n//     return (key === UP_ARROW || key === UP_KEY);\n// };\n// export const isDownKey = (key: string): boolean => {\n//     return (key === UP_ARROW || key === UP_KEY);\n// };\n// export const isLeftKey = (key: string): boolean => {\n//     return (key === UP_ARROW || key === UP_KEY);\n// };\n// export const isRightKey = (key: string): boolean => {\n//     return (key === UP_ARROW || key === UP_KEY);\n// };","\nimport React from 'react';\nimport {PERSON, WALL, BLANK} from './Constants';\n\ntype Props = {\n    mazeArray: Array<Array<string>>\n};\n\nfunction Maze(props: Props) {\n\n    const createTable = () => {\n        return (<div>\n        {props.mazeArray.map((row, index) => {\n            return <pre key={index}>{row.map((square, innerIndex) => {\n                    switch(square) {\n                        case BLANK:\n                            return ' ';\n                        case WALL: \n                            return 'â– ';\n                        case PERSON:\n                            return 'x';\n                        default:\n                            return `Error at (${index},${innerIndex})`;\n                    }\n                })}\n            </pre>\n        })}\n        </div>);\n    };\n\n    return (\n        <div>{createTable()}</div>\n    )\n}\n\nexport default Maze;","import React from 'react';\nimport {Location} from './AppTypes';\nimport {useState} from 'react';\n\ntype Props = {\n    currentLocation: Location,\n    onNewMaze: Function\n};\n\nfunction ControlPanel(props: Props) {\n  const [newMazeSize, setNewMazeSize] = useState<string>('20');\n\n    return (\n      <div>\n        <div>Current Location: {props.currentLocation.x}, {props.currentLocation.y}</div>\n        <div><input type=\"number\" value={newMazeSize} onChange={(e) =>{setNewMazeSize(e.target.value)}}></input>\n        <button onClick={() => {\n          const val = parseInt(newMazeSize);\n          if (!isNaN(val)) {\n            props.onNewMaze(val);\n          }\n          }}>Create New Maze</button></div>\n      </div>\n    )\n}\n\nexport default ControlPanel;","import './App.css';\n\nimport Maze from './Maze.react';\nimport ControlPanel from './ControlPanel.react';\nimport {useState, useCallback, useEffect} from 'react';\nimport * as Constants from './Constants';\nimport {Location} from './AppTypes';\nimport * as Helper from './Helpers';\n\nfunction App() {\n  \n  const [maze, setMaze] = useState<Array<Array<string>>>([['1','1','1','1','1','1','1','1','1','1']\n                                                         ,['1','0','0','0','0','0','0','0','0','1']\n                                                         ,['1','0','0','0','0','0','0','0','0','1']\n                                                         ,['1','0','0','0','0','0','0','0','0','1']\n                                                         ,['1','0','0','0','p','0','0','0','0','1']\n                                                         ,['1','0','0','0','0','0','0','0','0','1']\n                                                         ,['1','0','0','0','0','0','0','0','0','1']\n                                                         ,['1','0','0','0','0','0','0','0','0','1']\n                                                         ,['1','0','0','0','0','0','0','0','0','1']\n                                                         ,['1','1','1','1','1','1','1','1','1','1']]\n                                                         );\n\n// ------------------------------------------------------------\n  const startPos:Location = {x:4, y: 4};\n\n  const [personLocation, setPersonLocation] = useState<Location>(startPos);\n  const [lastLoc, setLasLoc] = useState<Location>(startPos);\n\n  const isWithinMazeBounds = useCallback((location: Location): boolean => {\n    return location.x > 0 && location.x < maze[0].length - 1 && location.y > 0 && location.y < maze.length-1;\n  },[maze]);\n\n  const handleKeyPress = useCallback((event:any) => {\n    let validKeyPress = false;\n    let newLoc = {x: personLocation.x, y: personLocation.y};\n\n    switch (event.key) {\n      case Constants.UP_ARROW:\n      case Constants.UP_KEY:\n        validKeyPress = true;\n        newLoc.y = personLocation.y - 1;\n        break;\n      case Constants.DOWN_ARROW:\n      case Constants.DOWN_KEY:\n        validKeyPress = true;\n        newLoc.y = personLocation.y + 1;\n        break;\n      case Constants.LEFT_ARROW:\n      case Constants.LEFT_KEY:\n        validKeyPress = true;\n        newLoc.x = personLocation.x - 1;\n        break;\n      case Constants.RIGHT_ARROW:\n      case Constants.RIGHT_KEY:\n        validKeyPress = true;\n        newLoc.x = personLocation.x + 1;\n        break;\n      default:\n        break;\n    }\n    if (validKeyPress && isWithinMazeBounds(newLoc)) {\n      setPersonLocation(newLoc);\n    }\n\n  },[setPersonLocation, isWithinMazeBounds, personLocation]);\n\n  // keep the maze up to date as the person is \n  useEffect(() => {\n    maze[lastLoc.y][lastLoc.x] = Constants.BLANK;\n    maze[personLocation.y][personLocation.x] = Constants.PERSON;\n    setLasLoc(personLocation);\n  }, [personLocation])\n\n  const onNewMaze = useCallback((size: number) => {\n    if (size > 0 && size < 100) {\n      const [mazeData, startPos] = Helper.createMaze(size);\n      setLasLoc(startPos);\n      setPersonLocation(startPos);\n      setMaze(mazeData);\n    }\n  },[setMaze, setPersonLocation]);\n\n  return (\n    <div className=\"App\" onKeyDown={handleKeyPress} tabIndex={0}>\n      <ControlPanel currentLocation={personLocation} onNewMaze={onNewMaze} />\n      <br/><br/>\n      Owen you are the x!\n      <header className=\"App-header\">\n        <Maze mazeArray={maze} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport {Location} from './AppTypes';\nimport {PERSON, WALL, BLANK} from './Constants';\n\nexport const createMaze = (size: number): [Array<Array<string>>, Location] => {\n  let mazeData = [];\n  const center = Math.round(size/2);\n  const startPos = {x: center, y: center};\n  \n  mazeData.push(Array(size).fill(WALL));\n  for (let i = 0; i <= size - 2; i++) {\n    mazeData.push([WALL, ...Array(size-2).fill(BLANK), WALL]);\n  }\n  mazeData[startPos.y][startPos.x] = PERSON;\n  mazeData.push(Array(size).fill(WALL));\n  return [mazeData, startPos];\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}